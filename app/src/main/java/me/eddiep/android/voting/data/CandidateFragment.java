package me.eddiep.android.voting.data;

import android.content.Context;
import android.graphics.drawable.Drawable;
import android.os.Build;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.support.v4.content.ContextCompat;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;

import me.eddiep.android.voting.R;

public class CandidateFragment extends Fragment {

    public CandidateFragment() {
    }

    /**
     * Returns a new instance of this fragment for the given section
     * number.
     */
    public static CandidateFragment newInstance(Candidate candidate) {
        CandidateFragment fragment = new CandidateFragment();
        Bundle args = new Bundle();
        args.putParcelable("candidate", candidate);
        fragment.setArguments(args);
        return fragment;
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {

        View rootView = inflater.inflate(R.layout.candidate_profile_fragment, container, false);

        Candidate candidate = getArguments().getParcelable("candidate");
        if (candidate != null) {
            TextView description = (TextView) rootView.findViewById(R.id.candidateDescription);
            TextView name = (TextView) rootView.findViewById(R.id.candidateName);
            ImageView background = (ImageView) rootView.findViewById(R.id.candidateBackground);

            description.setText(candidate.getDescription());
            name.setText(candidate.getName());

            background.setImageResource(candidate.getProfile());
            /*Drawable d = _getDrawable(getContext(), candidate.getProfile());
            background.setImageDrawable(d);*/
        }

        return rootView;
    }

    /**
     * Return a drawable object associated with a particular resource ID.
     * <p>
     * Starting in {@link android.os.Build.VERSION_CODES#LOLLIPOP}, the returned
     * drawable will be styled for the specified Context's theme.
     *
     * @param id The desired resource identifier, as generated by the aapt tool.
     *            This integer encodes the package, type, and resource entry.
     *            The value 0 is an invalid identifier.
     * @return Drawable An object that can be used to draw this resource.
     */
    public final Drawable _getDrawable(Context context, int id) {
        final int version = Build.VERSION.SDK_INT;
        if (version >= 21) {
            return ContextCompat.getDrawable(context, id);
        } else {
            return context.getResources().getDrawable(id);
        }
    }
}
